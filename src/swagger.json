{
  "swagger": "2.0",
  "info": {
    "description": "Esta Ã© uma API de tarefas a fazer chamada to-do. ",
    "version": "1.0.0",
    "title": "To-do API",
    "contact": {
      "email": "kellina@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "todo",
      "description": "todo crud"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/todo": {
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "Consulta todas as tarefas",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StoredTodo"
              }
            }
          },
          "404": {
            "description": "Not founded"
          }
        }
      },
      "post": {
        "tags": [
          "todo"
        ],
        "summary": "Cria uma nova tarefa",
        "description": "",
        "operationId": "addTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "dados do novo todo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StoredTodo"
            }
          }
        }
      }
    },
    "/todo/{id}": {
      "put": {
        "tags": [
          "todo"
        ],
        "summary": "Atualiza uma tarefa existende",
        "description": "",
        "operationId": "updateTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador da tarefa a ser alterada",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Dados da tarefa a ser alterada",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/StoredTodo"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Todo not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "todo"
        ],
        "summary": "Exclui uma tarefa",
        "description": "",
        "operationId": "deleteTodo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Todo id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/StoredTodo"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Todo not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Todo": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "ir ao mercado"
        }
      }
    },
    "UpdateTodo": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "ir ao mercado"
        },
        "done": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "StoredTodo": {
      "type": "object",
      "required": [
        "id",
        "description"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "ir ao mercado"
        },
        "done": {
          "type": "boolean",
          "example": true
        }
      }
    }
  }
}